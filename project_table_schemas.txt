--drop table country;
create table country(
countryID int not null,
countryname varchar(15),
primary key(countryID)
);

--drop table state;
create table state (
countryID int not null,
StateID int unique,
StateName varchar(15),
FOREIGN KEY(countryID) REFERENCES country(countryID)
);


create table salary (
salaryID int not null,
SalaryGroup varchar(20),
SalaryLower varchar(20),
SalaryUpper varchar(20),
primary key(salaryID)
);

create table gender (
genderID int not null,
gendername varchar(20),
primary key(genderID)
);

create table race (
raceID int not null,
racename varchar(20),
primary key(raceID)
);


create table education (
educationID int not null,
educationlevel varchar(20),
primary key(educationID)
);

create table Experience (
experienceID int not null,
experienceName varchar(20),
primary key(experienceID)
);

create table Skills (
skillID int not null,
skillname varchar(20),
primary key(skillID)
)

create table company(
CompanyID int not null,
CompanyName varchar(20),
CompanyEmail varchar(20),
StateID int,
CountryID int,
primary key(CompanyID),
foreign key (stateID) references state(stateID),
foreign key (countryID) references country(countryID)
);


create table applicant(
ApplicantID int not null,
ApplicantEmail varchar(20),
EducationID int,
Age int,
GenderID int,
RaceID int,
WorkAuthorization bool,
StateID int,
countryID int,
jobStateID int,
jobcountryid int,
ExpectedSalaryID int,
Primary key (ApplicantID),
foreign key (EducationID) references Education(EducationID),
foreign key (genderID) references gender(genderID),
foreign key (raceid) references race(raceID),
foreign key (stateid) references state(stateID),
foreign key (countryID) references country(countryID),
foreign key (JobStateID) references state(stateID),
foreign key (JobCountryID) references country(countryID),
foreign key (ExpectedSalaryID) references Salary(SalaryID)
);



create table Jobs (
JobID int not null,
JobTitle varchar(20),
CompanyID int, 
salaryID int,
JobStateID int,
jobcountryID int,
jobdescription varchar(20),
experienceTypeID int,
primary key(jobID),
foreign key(companyID) references company(companyid),
foreign key(SalaryID) references Salary(SalaryID),
foreign key(JobStateID) references state(stateId),
foreign key(JobCountryID) references country(countryid),
foreign key(ExperienceTypeID) references experience(experienceID)
);
	
create table jobskill_mapping(
jobid int not null,
skillid int not null,
foreign key(jobid) references jobs(jobid),
foreign key(skillid) references skills(skillid)
)

create table passwords(
ID integer not null,
EmailID varchar(20),
company_flag boolean,
secret_key varchar(20),
foreign key(id) references applicant(applicantid)
)





CompanyEmail varchar(20),
StateID int,
CountryID int,
primary key(CompanyID),
foreign key (stateID) references state(stateID),
foreign key (countryID) references country(countryID)
);

--drop table country;
create table country(
countryID int not null,
countryname varchar(15),
primary key(countryID)
);

--drop table state;
create table state (
countryID int not null,
StateID int unique,
StateName varchar(15),
FOREIGN KEY(countryID) REFERENCES country(countryID)
);


create table salary (
salaryID int not null,
SalaryGroup varchar(20),
SalaryLower varchar(20),
SalaryUpper varchar(20),
primary key(salaryID)
);

create table gender (
genderID int not null,
gendername varchar(20),
primary key(genderID)
);

create table race (
raceID int not null,
racename varchar(20),
primary key(raceID)
);


create table education (
educationID int not null,
educationlevel varchar(20),
primary key(educationID)
);

create table Experience (
experienceID int not null,
experienceName varchar(20),
primary key(experienceID)
);

create table Skills (
skillID int not null,
skillname varchar(20),
primary key(skillID)
)

create table company(
CompanyID int not null,
CompanyName varchar(20),
CompanyEmail varchar(20),
StateID int,
CountryID int,
primary key(CompanyID),
foreign key (stateID) references state(stateID),
foreign key (countryID) references country(countryID)
);


create table applicant(
ApplicantID int not null,
ApplicantEmail varchar(20),
EducationID int,
Age int,
GenderID int,
RaceID int,
WorkAuthorization bool,
StateID int,
countryID int,
jobStateID int,
jobcountryid int,
ExpectedSalaryID int,
Primary key (ApplicantID),
foreign key (EducationID) references Education(EducationID),
foreign key (genderID) references gender(genderID),
foreign key (raceid) references race(raceID),
foreign key (stateid) references state(stateID),
foreign key (countryID) references country(countryID),
foreign key (JobStateID) references state(stateID),
foreign key (JobCountryID) references country(countryID),
foreign key (ExpectedSalaryID) references Salary(SalaryID)
);



create table Jobs (
JobID int not null,
JobTitle varchar(20),
CompanyID int, 
salaryID int,
JobStateID int,
jobcountryID int,
jobdescription varchar(20),
experienceTypeID int,
primary key(jobID),
foreign key(companyID) references company(companyid),
foreign key(SalaryID) references Salary(SalaryID),
foreign key(JobStateID) references state(stateId),
foreign key(JobCountryID) references country(countryid),
foreign key(ExperienceTypeID) references experience(experienceID)
);
	
create table jobskill_mapping(
jobid int not null,
skillid int not null,
foreign key(jobid) references jobs(jobid),
foreign key(skillid) references skills(skillid)
)

create table passwords(
ID integer not null,
EmailID varchar(20),
company_flag boolean,
secret_key varchar(20),
foreign key(id) references applicant(applicantid)
)





CompanyEmail varchar(20),
StateID int,
CountryID int,
primary key(CompanyID),
foreign key (stateID) references state(stateID),
foreign key (countryID) references country(countryID)
);


















